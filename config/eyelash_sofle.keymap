#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 35    // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    zip_scroll_scaler: zip_scroll_scaler {
        compatible = "zmk,input-processor-scaler";
        #input-processor-cells = <2>;
        type = <INPUT_EV_REL>;
        codes = <INPUT_REL_WHEEL INPUT_REL_HWHEEL>;
        track-remainders;
    };
};

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    delay-ms = <0>;                   // 0
};

&mmv {
};

&mt {
    flavor = "balanced";
    tapping-term-ms = <150>;
};

&lt { tapping-term-ms = <150>; };

/ {
    kp_on: kp_on {
        compatible = "zmk,behavior-key-toggle";
        label = "KP_ON";
        #binding-cells = <1>;
        toggle-mode = "flip";
    };

    behaviors {
    };

    combos {
        compatible = "zmk,combos";

        wake_from_none {
            bindings = <&to 0>;
            key-positions = <35 29>;
            layers = <9>;
            timeout-ms = <50>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&mt LG(V) LC(V)  &kp N1               &kp N2           &kp N3              &kp N4            &kp N5       &kp UP_ARROW     &kp N6       &kp N7             &kp N8               &kp N9           &kp N0              &kp MINUS
&mt LA(C) LC(C)  &kp Q                &kp W            &kp E               &kp R             &kp T        &kp DOWN_ARROW   &kp Y        &kp U              &kp I                &kp O            &kp P               &kp LEFT_BRACKET
&mt LC(X) LA(X)  &mt LEFT_GUI A       &mt LEFT_ALT S   &mt LEFT_CONTROL D  &mt LEFT_SHIFT F  &kp G        &kp LEFT_ARROW   &kp H        &mt RIGHT_SHIFT J  &mt RIGHT_CONTROL K  &mt RIGHT_ALT L  &mt RIGHT_GUI SEMI  &kp APOS
&mt LC(Z) LA(Z)  &kp Z                &kp X            &kp C               &kp V             &kp B        &kp RIGHT_ARROW  &kp N        &kp M              &kp COMMA            &kp DOT          &kp FSLH            &kp LEFT_SHIFT
&kp C_MUTE       &mt ENTER LS(ENTER)  &mt F24 RC(F24)  &lt 4 ESC           &lt 1 SPACE       &lt 2 TAB    &kp ENTER        &lt 6 ENTER  &lt 5 BACKSPACE    &lt 7 DELETE         &kp RIGHT_SHIFT  &mo 8
            >;

            display-name = "LAYER0";
        };

        Nav {
            bindings = <
&trans  &trans    &trans    &trans       &trans     &trans    &trans  &trans             &trans     &trans         &trans       &trans     &trans
&trans  &trans    &trans    &key_repeat  &trans     &trans    &trans  &kp LS(LC(Z))      &kp LC(V)  &kp UP         &kp LC(X)    &kp LC(Z)  &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL    &kp LSHFT  &trans    &trans  &kp_on LEFT_SHIFT  &kp LEFT   &kp DOWN       &kp RIGHT    &kp LC(C)  &trans
&trans  &trans    &trans    &trans       &trans     &trans    &trans  &kp INS            &kp HOME   &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &trans
&trans  &trans    &trans    &trans       &trans     &trans    &trans  &kp ENTER          &kp BSPC   &kp DELETE     &trans       &trans
            >;
        };

        Mouse {
            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans    &trans  &trans         &trans          &trans          &trans           &trans           &trans
&trans  &trans    &trans    &trans     &trans     &trans    &trans  &kp LS(LC(Z))  &kp LC(V)       &mmv MOVE_UP    &kp LC(X)        &kp LC(Z)        &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans    &trans  &trans         &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &kp LC(C)        &trans
&trans  &trans    &trans    &trans     &trans     &trans    &trans  &trans         &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP     &msc SCRL_RIGHT  &trans
&trans  &trans    &trans    &trans     &trans     &trans    &trans  &mkp RCLK      &mkp LCLK       &mkp MCLK       &trans           &trans
            >;
        };

        Button {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        Media {
            bindings = <
&trans     &trans    &trans    &trans     &trans     &trans    &trans  &bt BT_CLR        &trans          &trans             &trans        &trans        &bt BT_CLR_ALL
&trans     &trans    &trans    &trans     &trans     &trans    &trans  &trans            &trans          &out OUT_TOG       &trans        &trans        &to 9
&trans     &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans    &trans  &trans            &kp C_PREVIOUS  &kp C_VOLUME_DOWN  &kp C_VOL_UP  &kp C_NEXT    &trans
&soft_off  &trans    &trans    &trans     &trans     &trans    &trans  &bt BT_SEL 0      &bt BT_SEL 1    &bt BT_SEL 2       &bt BT_SEL 3  &bt BT_SEL 4  &ext_power EP_OFF
&trans     &trans    &trans    &trans     &trans     &trans    &trans  &kp C_PLAY_PAUSE  &kp C_STOP      &kp C_MUTE         &trans        &trans
            >;
        };

        Num {
            bindings = <
&trans  &trans     &trans  &trans   &trans  &trans       &trans  &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp LBKT   &kp N7  &kp N8   &kp N9  &kp RBKT     &trans  &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp SEMI   &kp N4  &kp N5   &kp N6  &kp EQUAL    &trans  &trans  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI  &trans
&trans  &kp GRAVE  &kp N1  &kp N2   &kp N3  &kp BSLH     &trans  &trans  &trans     &trans     &trans    &trans    &trans
&trans  &trans     &trans  &kp DOT  &kp N0  &kp MINUS    &trans  &trans  &trans     &trans     &trans    &trans
            >;
        };

        Symbol {
            bindings = <
&trans  &trans     &trans    &trans     &trans     &trans       &trans  &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp LBRC   &kp AMPS  &kp STAR   &kp LPAR   &kp RBRC     &trans  &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp COLON  &kp DLLR  &kp PRCNT  &kp CARET  &kp PLUS     &trans  &trans  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI  &trans
&trans  &kp TILDE  &kp EXCL  &kp AT     &kp HASH   &kp PIPE     &trans  &trans  &trans     &trans     &trans    &trans    &trans
&trans  &trans     &trans    &kp LPAR   &kp RPAR   &kp UNDER    &trans  &trans  &trans     &trans     &trans    &trans
            >;
        };

        Fun {
            bindings = <
&trans  &trans   &trans  &trans     &trans     &trans             &trans  &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp F12  &kp F7  &kp F8     &kp F9     &kp PRINTSCREEN    &trans  &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp F11  &kp F4  &kp F5     &kp F6     &kp SCROLLLOCK     &trans  &trans  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI  &trans
&trans  &kp F10  &kp F1  &kp F2     &kp F3     &kp PAUSE_BREAK    &trans  &trans  &trans     &trans     &trans    &trans    &trans
&trans  &trans   &trans  &kp K_APP  &kp SPACE  &kp TAB            &trans  &trans  &trans     &trans     &trans    &trans
            >;
        };

        Setting {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2       &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &kp F6  &kp F7  &kp F8      &kp F9     &kp F10      &trans
&trans     &bt BT_CLR    &bt BT_CLR_ALL  &trans             &trans        &trans          &mmv MOVE_DOWN   &trans  &trans  &kp F11     &kp F12    &kp UNDER    &kp PLUS
&trans     &out OUT_USB  &out OUT_BLE    &ext_power EP_OFF  &trans        &trans          &mmv MOVE_LEFT   &trans  &trans  &trans      &trans     &kp LBRC     &kp RBRC
&trans     &sys_reset    &trans          &bootloader        &trans        &trans          &mmv MOVE_RIGHT  &trans  &trans  &sys_reset  &soft_off  &bootloader  &trans
&trans     &trans        &trans          &trans             &trans        &trans          &mkp LCLK        &trans  &trans  &trans      &trans     &trans
            >;
        };

        none {
            bindings = <
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
            >;
        };
    };
};
